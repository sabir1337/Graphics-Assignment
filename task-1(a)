#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

#include <iostream>
#include <cmath>
using namespace std;

// --------------------------------------------------------
// CONFIGURATION
// --------------------------------------------------------
const int WINDOW_WIDTH = 640;
const int WINDOW_HEIGHT = 480;

// Default points (can be changed by user input)
int pointX1 = 100, pointY1 = 100;
int pointX2 = 500, pointY2 = 300;

// --------------------------------------------------------
// Draw a small point on screen
// --------------------------------------------------------
void drawDot(int x, int y)
{
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
}

// --------------------------------------------------------
// Bresenhamâ€™s Line Algorithm 
// --------------------------------------------------------
void drawLineBresenham(int xStart, int yStart, int xEnd, int yEnd)
{
    int dx = abs(xEnd - xStart);
    int dy = abs(yEnd - yStart);

    int stepX = (xStart < xEnd) ? 1 : -1;
    int stepY = (yStart < yEnd) ? 1 : -1;

    bool isSteep = dy > dx;
    if (isSteep)
    {
        swap(xStart, yStart);
        swap(xEnd, yEnd);
        swap(dx, dy);
        swap(stepX, stepY);
    }

    int error = 2 * dy - dx;
    int x = xStart;
    int y = yStart;

    for (int i = 0; i <= dx; i++)
    {
        if (isSteep)
            drawDot(y, x);
        else
            drawDot(x, y);

        if (error > 0)
        {
            y += stepY;
            error -= 2 * dx;
        }

        x += stepX;
        error += 2 * dy;
    }
}

// --------------------------------------------------------
// Display callback for OpenGL
// --------------------------------------------------------
void renderScene()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0.9f, 0.9f, 0.2f); // yellowish color
    drawLineBresenham(pointX1, pointY1, pointX2, pointY2);
    glFlush();
}

// --------------------------------------------------------
// OpenGL setup
// --------------------------------------------------------
void setupGraphics()
{
    glClearColor(0.0, 0.0, 0.0, 1.0); // background black
    glColor3f(1.0, 1.0, 1.0);         // default drawing color

    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();

    gluOrtho2D(0, WINDOW_WIDTH, 0, WINDOW_HEIGHT);
    glPointSize(2.0f);
}

// --------------------------------------------------------
// MAIN FUNCTION
// --------------------------------------------------------
int main(int argc, char** argv)
{
    cout << "Enter coordinates x1 y1 x2 y2: ";
    if (!(cin >> pointX1 >> pointY1 >> pointX2 >> pointY2))
    {
        cout << "Invalid input. Using default values.\n";
        pointX1 = 100; pointY1 = 100;
        pointX2 = 500; pointY2 = 300;
    }

    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(WINDOW_WIDTH, WINDOW_HEIGHT);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Bresenham Line Drawing (Unique Version)");

    setupGraphics();
    glutDisplayFunc(renderScene);
    glutMainLoop();

    return 0;
}
